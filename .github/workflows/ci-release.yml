# This is a basic workflow to help you get started with Actions

name: CI-release

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    # Runs a single command using the runners shell
    - name: release 폴더 생성
      run: |
        mkdir release
    - name: 버전 추가
      env:
        TAG_NAME: ${{ github.ref }}
      run: |
        get-childitem ./extra -recurse -include *.yml | ForEach-Object {(get-content -encoding utf8 $_.FullName) -replace 'VERSION_INFO_HERE', $TAG_NAME | out-file -encoding utf8 $_.FullName}        
    - name: Build MSI
      run: |
        ./build build --cid 7.6.2 --bitness x86 filebeat-oss metricbeat-oss
    - name: copy MSI
      run: |
        Copy-Item "./bin/out/metricbeat/*.msi"  -Destination "./release"
        Copy-Item "./bin/out/filebeat/*.msi"  -Destination "./release"
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        # Artifact name
        name: beats
        # Directory containing files to upload
        path: ./release
  release:
    runs-on: windows-latest
    needs: [build]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v1.0.0
        with:
          # Artifact name
          name: beats
          # Destination path
          path: ./release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./release/filebeat.msi
          asset_name: filebeat.msi
          asset_content_type: application/octet-stream
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./release/metricbeat.msi
          asset_name: metricbeat.msi
          asset_content_type: application/octet-stream
